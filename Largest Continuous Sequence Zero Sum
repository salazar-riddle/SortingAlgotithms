vector<int> Solution::lszero(vector<int> &A) {
    unordered_map<int,int> Map;
    int sum=0;
    int start=0,end=0;
    vector<int> res;
    int Max=INT_MIN;
    for(int i=0;i<A.size();i++)
    {
        sum+=A[i];
        if(sum==0) { start= -1; end = i; Max= max(Max, i+1);}
        if(Map.find(sum)==Map.end())
        {    
            Map.insert({sum,i});  // add sum to map to find repetition
        }
        else 
        {
            if(Max < abs(Map[sum]-i)+1)
            {
                start= i;
                end= Map[sum];
                Max= abs(end-start)+1;
        
            
            }        
        }
    }
    if(start>end) 
        swap(start,end);  // start and end may be reversed
    for(int i=start+1;i<=end;i++) 
        res.push_back(A[i]);
    return res;
}
