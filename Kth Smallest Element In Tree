/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int inordsucc(TreeNode* root,int ele){
     TreeNode* head= root;
     TreeNode* succ=NULL;
     while(head){
         if(head->val>ele){
             succ=head;
             head=head->left;
         }
         else if(head->val<ele){
             head= head->right;
         }
         else{
           
            if(head->right==NULL){
                head=head->right;
                while(head->left){
                    head=head->left;
                }
                return head->val;
            }
            else return succ->val;
         }
     }
     return succ->val;
 }
int Solution::kthsmallest(TreeNode* A, int B) {
    TreeNode* root= A;
        while(A->left){
            A=A->left;
        }
        int res=A->val;
        for(int i=0;i<B-1;i++){
            res=inordsucc(root,res);
        }
        return res;
}
